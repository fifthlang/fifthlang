<#+

public class PropertySpec
{
    public string Name {get; set;}
    public string Type {get; set;}
    public string InterfaceName {get; set;}
    public bool IsCollection {get; set;}
    public bool IgnoreDuringVisit {get; set;}

    public PropertySpec(string name, string type, bool isCollection = false, bool ignoreDuringVisit = false, string interfaceName = null){
        Name = name;
        Type = type;
        IsCollection = isCollection ;
        IgnoreDuringVisit = ignoreDuringVisit;
        InterfaceName = interfaceName;
    }
}
#>


<#+

public class AstNodeSpec
{
    public string Name {get; set;}
    public string Parent {get; set;}
    public string CustomCode {get; set;}
    public string PostCtor {get; set;}
    public bool BypassCtorGeneration {get; set;}
    public PropertySpec[] Props {get;set;}

    public AstNodeSpec()
    {
        Name = "";
        Parent = "";
        CustomCode = "";
        PostCtor = "";
        BypassCtorGeneration = false;
        Props = new PropertySpec[]{};
    }
}

#>

<#+
public static class GenTypeTypeHelpers
{
    public static string DisplayProps(fifth.metamodel.metadata.AstNodeSpec ast)
    =>fifth.metamodel.metadata.GenerationHelpers.DisplayProps(ast);

    public static string PluralType(dynamic astMetadata)
    {
        if (astMetadata?.IsCollection ?? false)
        {
            return $"List<{astMetadata.InterfaceName ?? astMetadata.Type}>";
        }
        return astMetadata.Type;
    }

    public static string PluralTypeInit(dynamic astMetadata)
    {
        if (astMetadata?.IsCollection ?? false)
        {
            return $"new List<{astMetadata.InterfaceName ?? astMetadata.Type}>()";
        }
        return $"new {astMetadata.Type}()";
    }
} #>
